{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\mode_paiements.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\mode_paiements.vue","mtime":1713232123554},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["\r\n  import { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    components: {\r\n      BCard,\r\n      BCardHeader,\r\n      BCardBody,\r\n      BCollapse,\r\n      BModal,\r\n    },\r\n    data() {\r\n      return {\r\n        isCollapsed: false,\r\n        formData: {\r\n          process: ''\r\n        },\r\n        editFormData: {\r\n          process: ''\r\n        },\r\n        table1: {\r\n          title: \"Mode Paiement Table\",\r\n          subTitle: \"Mode Paiement\",\r\n          columns: [\"Id\", \"Process\"],\r\n          data: []\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      toggleCollapse() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n      },\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/modePaiementRouter');\r\n          this.table1.data = response.data.data.map(item => ({\r\n            Id: item.id,\r\n            Process: item.process,\r\n           \r\n          }));\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      async submitForm() {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/modePaiementRouter', {\r\n            process: this.formData.process\r\n          });\r\n          if (response.status === 201) {\r\n            this.fetchData();\r\n            this.formData.process = '';\r\n            this.isCollapsed = false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding process:', error);\r\n        }\r\n      },\r\n      deleteItem(item) {\r\n        const confirmation = confirm(\"Are you sure you want to delete this item?\");\r\n        if (confirmation) {\r\n          axios.delete(`http://localhost:5000/modePaiementRouter/${item.Id}`)\r\n            .then(() => {\r\n              this.fetchData();\r\n            })\r\n            .catch(error => {\r\n              console.error('Error deleting item:', error);\r\n            });\r\n        }\r\n      },\r\n      openEditModal(item) {\r\n        this.editFormData = {\r\n          Id: item.Id,\r\n          process: item.Process\r\n        };\r\n        this.$refs.editModal.show();\r\n      },\r\n      submitEditForm() {\r\n        try {\r\n          axios.put(`http://localhost:5000/modePaiementRouter/${this.editFormData.Id}`, {\r\n            process: this.editFormData.process\r\n          })\r\n          .then(() => {\r\n            const index = this.table1.data.findIndex(item => item.Id === this.editFormData.Id);\r\n            if (index !== -1) {\r\n              this.table1.data[index].Process = this.editFormData.process;\r\n            }\r\n            this.$refs.editModal.hide();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error editing process:', error);\r\n          });\r\n        } catch (error) {\r\n          console.error('Error editing process:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  ",{"version":3,"sources":["mode_paiements.vue"],"names":[],"mappings":";AA+DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mode_paiements.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <!-- Collapsible form -->\r\n        <b-card>\r\n          <b-card-header id=\"formCollapseHeader\">\r\n            <h5 class=\"mb-0\">\r\n              <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\r\n                Table des modes de paiement\r\n                <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\r\n              </button>\r\n            </h5>\r\n          </b-card-header>\r\n  \r\n          <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\r\n            <b-card-body>\r\n              <form @submit.prevent=\"submitForm\">\r\n                <div class=\"form-group\">\r\n                  <input v-model=\"formData.process\" type=\"text\" class=\"form-control\" id=\"process\" placeholder=\"Process Name\" required>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Ajouter Process</button>\r\n              </form>\r\n            </b-card-body>\r\n          </b-collapse>\r\n        </b-card>\r\n  \r\n        <!-- Bootstrap Modal for Edit -->\r\n        <b-modal ref=\"editModal\" title=\"Edit Process\" @ok=\"submitEditForm\">\r\n          <div>\r\n            <div class=\"form-group\">\r\n              <label for=\"editProcessName\">Nom de Process:</label>\r\n              <input v-model=\"editFormData.process\" type=\"text\" class=\"form-control\" id=\"editProcessName\" required>\r\n            </div>\r\n          </div>\r\n        </b-modal>\r\n  \r\n        <!-- Your existing card -->\r\n        <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\r\n          <div slot=\"raw-content\" class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\r\n                  <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\r\n                  <td>\r\n                    <button class=\"btn btn-danger\" @click=\"deleteItem(item)\">Supprimer</button>\r\n                    <button class=\"btn btn-warning\" @click=\"openEditModal(item)\">Modifier</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    components: {\r\n      BCard,\r\n      BCardHeader,\r\n      BCardBody,\r\n      BCollapse,\r\n      BModal,\r\n    },\r\n    data() {\r\n      return {\r\n        isCollapsed: false,\r\n        formData: {\r\n          process: ''\r\n        },\r\n        editFormData: {\r\n          process: ''\r\n        },\r\n        table1: {\r\n          title: \"Mode Paiement Table\",\r\n          subTitle: \"Mode Paiement\",\r\n          columns: [\"Id\", \"Process\"],\r\n          data: []\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      toggleCollapse() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n      },\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/modePaiementRouter');\r\n          this.table1.data = response.data.data.map(item => ({\r\n            Id: item.id,\r\n            Process: item.process,\r\n           \r\n          }));\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      async submitForm() {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/modePaiementRouter', {\r\n            process: this.formData.process\r\n          });\r\n          if (response.status === 201) {\r\n            this.fetchData();\r\n            this.formData.process = '';\r\n            this.isCollapsed = false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding process:', error);\r\n        }\r\n      },\r\n      deleteItem(item) {\r\n        const confirmation = confirm(\"Are you sure you want to delete this item?\");\r\n        if (confirmation) {\r\n          axios.delete(`http://localhost:5000/modePaiementRouter/${item.Id}`)\r\n            .then(() => {\r\n              this.fetchData();\r\n            })\r\n            .catch(error => {\r\n              console.error('Error deleting item:', error);\r\n            });\r\n        }\r\n      },\r\n      openEditModal(item) {\r\n        this.editFormData = {\r\n          Id: item.Id,\r\n          process: item.Process\r\n        };\r\n        this.$refs.editModal.show();\r\n      },\r\n      submitEditForm() {\r\n        try {\r\n          axios.put(`http://localhost:5000/modePaiementRouter/${this.editFormData.Id}`, {\r\n            process: this.editFormData.process\r\n          })\r\n          .then(() => {\r\n            const index = this.table1.data.findIndex(item => item.Id === this.editFormData.Id);\r\n            if (index !== -1) {\r\n              this.table1.data[index].Process = this.editFormData.process;\r\n            }\r\n            this.$refs.editModal.hide();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error editing process:', error);\r\n          });\r\n        } catch (error) {\r\n          console.error('Error editing process:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .arrow {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    vertical-align: middle;\r\n    border: solid;\r\n    border-width: 0.2em 0.2em 0 0.2em;\r\n    border-color: #000000;\r\n    transition: transform 0.3s;\r\n  }\r\n  \r\n  .rotated {\r\n    transform: rotate(-90deg);\r\n  }\r\n  .card .card-body {\r\n      padding: 15px 15px 20px 15px;\r\n  }\r\n  </style>\r\n  "]}]}