{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Typography.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Typography.vue","mtime":1713232124451},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\.babelrc","mtime":1713232126048},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/serveurr/vue_js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BCard, BCardHeader, BCardBody, BCollapse } from 'bootstrap-vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse\n  },\n  data: function data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        fund: ''\n      },\n      table1: {\n        title: \"Supplier Table\",\n        subTitle: \"Here is a subtitle for this table\",\n        columns: [\"ID\", \"Fund\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchSuppliers(); // Fetch suppliers when the component is mounted\n  },\n  methods: {\n    toggleCollapse: function toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    fetchSuppliers: function () {\n      var _fetchSuppliers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:5000/fournisseurRoute');\n            case 3:\n              response = _context.sent;\n              // Map fetched data to match the table structure\n              this.table1.data = response.data.data.map(function (supplier) {\n                return {\n                  ID: supplier.id,\n                  Fund: supplier.FondCaisse\n                };\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching suppliers:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchSuppliers() {\n        return _fetchSuppliers.apply(this, arguments);\n      }\n      return fetchSuppliers;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('http://localhost:5000/fournisseurRoute', {\n                FondCaisse: this.formData.fund\n              });\n            case 3:\n              response = _context2.sent;\n              // Update the table data if the request is successful\n              if (response.status === 201) {\n                this.table1.data.push({\n                  ID: response.data.id,\n                  Fund: response.data.FondCaisse\n                });\n                // Clear the form after adding the supplier\n                this.formData.fund = '';\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error adding supplier:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    deleteSupplier: function () {\n      var _deleteSupplier = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(supplier) {\n        var confirmation;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              confirmation = confirm(\"Are you sure you want to delete this supplier?\");\n              if (!confirmation) {\n                _context3.next = 11;\n                break;\n              }\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios.delete(\"http://localhost:5000/fournisseurRoute/\".concat(supplier.ID));\n            case 5:\n              // Refresh the table after deletion\n              this.fetchSuppliers();\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error('Error deleting supplier:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 8]]);\n      }));\n      function deleteSupplier(_x) {\n        return _deleteSupplier.apply(this, arguments);\n      }\n      return deleteSupplier;\n    }(),\n    editSupplier: function editSupplier(supplier) {\n      var _this = this;\n      var newFund = prompt(\"Enter the new fund:\", supplier.Fund);\n      if (newFund !== null) {\n        axios.put(\"http://localhost:5000/fournisseurRoute/\".concat(supplier.ID), {\n          FondCaisse: newFund\n        }).then(function () {\n          _this.fetchSuppliers(); // Refresh the table after editing\n        }).catch(function (error) {\n          console.error('Error editing supplier:', error);\n        });\n      }\n    }\n  }\n};",{"version":3,"names":["BCard","BCardHeader","BCardBody","BCollapse","axios","components","data","isCollapsed","formData","fund","table1","title","subTitle","columns","mounted","fetchSuppliers","methods","toggleCollapse","_fetchSuppliers","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","map","supplier","ID","id","Fund","FondCaisse","t0","console","error","stop","apply","arguments","submitForm","_submitForm","_callee2","_callee2$","_context2","post","status","push","deleteSupplier","_deleteSupplier","_callee3","confirmation","_callee3$","_context3","confirm","delete","concat","_x","editSupplier","_this","newFund","prompt","put","then","catch"],"sources":["src/pages/Typography.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <!-- Collapsible form -->\n      <b-card>\n        <b-card-header id=\"formCollapseHeader\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\n             Add New Supplier\n              <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\n            </button>\n          </h5>\n        </b-card-header>\n        <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\n          <b-card-body>\n            <form @submit.prevent=\"submitForm\">\n              <div class=\"form-group\">\n                <input v-model=\"formData.fund\" type=\"number\" class=\"form-control\" id=\"fund\" placeholder=\"Fund\" required>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary\">Add Supplier</button>\n            </form>\n          </b-card-body>\n        </b-collapse>\n      </b-card>\n      <!-- Your existing card -->\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\n                <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\n                <td>\n                  <button class=\"btn btn-danger\" @click=\"deleteSupplier(item)\">Delete</button>\n                  <button class=\"btn btn-warning\" @click=\"editSupplier(item)\">Edit</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BCard, BCardHeader, BCardBody, BCollapse } from 'bootstrap-vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCollapse,\n  },\n  data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        fund: ''\n      },\n      table1: {\n        title: \"Supplier Table\",\n        subTitle: \"Here is a subtitle for this table\",\n        columns: [\"ID\", \"Fund\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted() {\n    this.fetchSuppliers(); // Fetch suppliers when the component is mounted\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    async fetchSuppliers() {\n      try {\n        // Fetch suppliers from your server-side endpoint\n        const response = await axios.get('http://localhost:5000/fournisseurRoute');\n        // Map fetched data to match the table structure\n        this.table1.data = response.data.data.map(supplier => ({\n          ID: supplier.id,\n          Fund: supplier.FondCaisse,\n         \n        }));\n      } catch (error) {\n        console.error('Error fetching suppliers:', error);\n      }\n    },\n    async submitForm() {\n      try {\n        // Send POST request to add a new supplier\n        const response = await axios.post('http://localhost:5000/fournisseurRoute', {\n          FondCaisse: this.formData.fund\n        });\n        // Update the table data if the request is successful\n        if (response.status === 201) {\n          this.table1.data.push({\n            ID: response.data.id,\n            Fund: response.data.FondCaisse,\n           \n          });\n          // Clear the form after adding the supplier\n          this.formData.fund = '';\n        }\n      } catch (error) {\n        console.error('Error adding supplier:', error);\n      }\n    },\n    async deleteSupplier(supplier) {\n      const confirmation = confirm(\"Are you sure you want to delete this supplier?\");\n      if (confirmation) {\n        try {\n          // Send DELETE request to delete the supplier\n          await axios.delete(`http://localhost:5000/fournisseurRoute/${supplier.ID}`);\n          // Refresh the table after deletion\n          this.fetchSuppliers();\n        } catch (error) {\n          console.error('Error deleting supplier:', error);\n        }\n      }\n    },\n    editSupplier(supplier) {\n      const newFund = prompt(\"Enter the new fund:\", supplier.Fund);\n      if (newFund !== null) {\n        axios.put(`http://localhost:5000/fournisseurRoute/${supplier.ID}`, {\n          FondCaisse: newFund\n        })\n        .then(() => {\n          this.fetchSuppliers(); // Refresh the table after editing\n        })\n        .catch(error => {\n          console.error('Error editing supplier:', error);\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styling for the arrow */\n.arrow {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  border: solid;\n  border-width: 0.2em 0.2em 0 0.2em;\n  border-color: #000000;\n  transition: transform 0.3s;\n}\n\n/* Styling for the arrow when the form is collapsed */\n.rotated {\n  transform: rotate(-90deg);\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}