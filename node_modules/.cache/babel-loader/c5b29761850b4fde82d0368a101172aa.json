{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\revnuejournaliers.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\revnuejournaliers.vue","mtime":1713232123951},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\.babelrc","mtime":1713232126048},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/serveurr/vue_js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse,\n    BModal: BModal\n  },\n  data: function data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        revenue: '',\n        caisseId: null // Initialize to null\n      },\n      editFormData: {\n        id: null,\n        revenue: '',\n        caisseId: null\n      },\n      table1: {\n        title: \"Revenue Table\",\n        subTitle: \"Here is a subtitle for this table\",\n        columns: [\"ID\", \"Revenue\", \"Caisse ID\"],\n        data: [] // Initialize as empty array\n      },\n      caisses: [] // To store the caisses fetched from the server\n    };\n  },\n  mounted: function mounted() {\n    this.fetchRevenue(); // Fetch revenue when the component is mounted\n    this.fetchCaisses(); // Fetch caisses when the component is mounted\n  },\n  methods: {\n    toggleCollapse: function toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    fetchRevenue: function () {\n      var _fetchRevenue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:5000/revnue');\n            case 3:\n              response = _context.sent;\n              // Map fetched data to match the table structure\n              this.table1.data = response.data.data.map(function (revenue) {\n                return {\n                  ID: revenue.id,\n                  Revenue: revenue.Revnue,\n                  \"Caisse ID\": revenue.CaisseId\n                };\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching revenue:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchRevenue() {\n        return _fetchRevenue.apply(this, arguments);\n      }\n      return fetchRevenue;\n    }(),\n    fetchCaisses: function () {\n      var _fetchCaisses = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/caisse');\n            case 3:\n              response = _context2.sent;\n              // Store fetched caisses\n              this.caisses = response.data.data;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error fetching caisses:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function fetchCaisses() {\n        return _fetchCaisses.apply(this, arguments);\n      }\n      return fetchCaisses;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.post('http://localhost:5000/revnue', {\n                Revnue: this.formData.revenue,\n                CaisseId: this.formData.caisseId // Include the Caisse ID in the request\n              });\n            case 3:\n              response = _context3.sent;\n              if (!(response.status === 201)) {\n                _context3.next = 10;\n                break;\n              }\n              this.table1.data.push({\n                ID: response.data.id,\n                Revenue: response.data.Revnue,\n                \"Caisse ID\": response.data.CaisseId\n              });\n              _context3.next = 8;\n              return this.fetchRevenue();\n            case 8:\n              // Clear the form after adding the revenue\n              this.formData.revenue = '';\n              this.formData.caisseId = null; // Clear the Caisse ID field as well\n            case 10:\n              _context3.next = 15;\n              break;\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error adding revenue:', _context3.t0);\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 12]]);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    deleteRevenue: function () {\n      var _deleteRevenue = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(revenue) {\n        var confirmation;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              confirmation = confirm(\"Are you sure you want to delete this revenue?\");\n              if (!confirmation) {\n                _context4.next = 11;\n                break;\n              }\n              _context4.prev = 2;\n              _context4.next = 5;\n              return axios.delete(\"http://localhost:5000/revnue/\".concat(revenue.ID));\n            case 5:\n              // Refresh the table after deletion\n              this.fetchRevenue();\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.error('Error deleting revenue:', _context4.t0);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[2, 8]]);\n      }));\n      function deleteRevenue(_x) {\n        return _deleteRevenue.apply(this, arguments);\n      }\n      return deleteRevenue;\n    }(),\n    openEditModal: function openEditModal(revenue) {\n      this.editFormData.id = revenue.ID;\n      this.editFormData.revenue = revenue.Revenue;\n      this.editFormData.caisseId = revenue[\"Caisse ID\"];\n      this.$refs.editModal.show();\n    },\n    submitEditForm: function () {\n      var _submitEditForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return axios.put(\"http://localhost:5000/revnue/\".concat(this.editFormData.id), {\n                Revnue: this.editFormData.revenue,\n                CaisseId: this.editFormData.caisseId // Include the updated Caisse ID in the request\n              });\n            case 3:\n              // Hide the modal after editing\n              this.$refs.editModal.hide();\n              // Refresh the table after editing\n              this.fetchRevenue();\n              _context5.next = 10;\n              break;\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error editing revenue:', _context5.t0);\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n      function submitEditForm() {\n        return _submitEditForm.apply(this, arguments);\n      }\n      return submitEditForm;\n    }()\n  }\n};",{"version":3,"names":["BCard","BCardHeader","BCardBody","BCollapse","BModal","axios","components","data","isCollapsed","formData","revenue","caisseId","editFormData","id","table1","title","subTitle","columns","caisses","mounted","fetchRevenue","fetchCaisses","methods","toggleCollapse","_fetchRevenue","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","map","ID","Revenue","Revnue","CaisseId","t0","console","error","stop","apply","arguments","_fetchCaisses","_callee2","_callee2$","_context2","submitForm","_submitForm","_callee3","_callee3$","_context3","post","status","push","deleteRevenue","_deleteRevenue","_callee4","confirmation","_callee4$","_context4","confirm","delete","concat","_x","openEditModal","$refs","editModal","show","submitEditForm","_submitEditForm","_callee5","_callee5$","_context5","put","hide"],"sources":["src/pages/revnuejournaliers.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <!-- Collapsible form -->\r\n      <b-card>\r\n        <b-card-header id=\"formCollapseHeader\">\r\n          <h5 class=\"mb-0\">\r\n            <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\r\n              Ajouter un nouveau revenu\r\n              <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\r\n            </button>\r\n          </h5>\r\n        </b-card-header>\r\n        <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\r\n          <b-card-body>\r\n            <form @submit.prevent=\"submitForm\" class=\"needs-validation\" novalidate>\r\n              <div class=\"form-group\">\r\n                <label for=\"revenue\">Revenue</label>\r\n                <input v-model=\"formData.revenue\" type=\"number\" class=\"form-control\" id=\"revenue\" placeholder=\"Revenue\" required>\r\n                <div class=\"invalid-feedback\">Please enter a valid revenue.</div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"caisseId\">Caisse ID</label>\r\n                <select v-model=\"formData.caisseId\" class=\"form-control\" id=\"caisseId\" required>\r\n                  <option v-for=\"caisse in caisses\" :value=\"caisse.id\" :key=\"caisse.id\">{{ caisse.id }}</option>\r\n                </select>\r\n                <div class=\"invalid-feedback\">Please select a Caisse ID.</div>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Add Revenue</button>\r\n            </form>\r\n\r\n          </b-card-body>\r\n        </b-collapse>\r\n      </b-card>\r\n\r\n      <!-- Your existing card -->\r\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\r\n        <div slot=\"raw-content\" class=\"table-responsive\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\r\n                <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\r\n                <td>\r\n                  <button class=\"btn btn-danger\" @click=\"deleteRevenue(item)\">Supprimer</button>\r\n                  <button class=\"btn btn-warning\" @click=\"openEditModal(item)\">Modifier</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </card>\r\n\r\n      <!-- Edit Revenue Modal -->\r\n      <b-modal ref=\"editModal\" title=\"Edit Revenue\">\r\n        <form @submit.prevent=\"submitEditForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"editRevenue\">Revenue</label>\r\n            <input v-model=\"editFormData.revenue\" type=\"number\" class=\"form-control\" id=\"editRevenue\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"editCaisseId\">Caisse ID</label>\r\n            <select v-model=\"editFormData.caisseId\" class=\"form-control\" id=\"editCaisseId\" required>\r\n              <option v-for=\"caisse in caisses\" :value=\"caisse.id\" :key=\"caisse.id\">{{ caisse.id }}</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\r\n        </form>\r\n      </b-modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    BCard,\r\n    BCardHeader,\r\n    BCardBody,\r\n    BCollapse,\r\n    BModal,\r\n  },\r\n  data() {\r\n    return {\r\n      isCollapsed: false,\r\n      formData: {\r\n        revenue: '',\r\n        caisseId: null, // Initialize to null\r\n      },\r\n      editFormData: {\r\n        id: null,\r\n        revenue: '',\r\n        caisseId: null,\r\n      },\r\n      table1: {\r\n        title: \"Revenue Table\",\r\n        subTitle: \"Here is a subtitle for this table\",\r\n        columns: [\"ID\", \"Revenue\", \"Caisse ID\"],\r\n        data: [] // Initialize as empty array\r\n      },\r\n      caisses: [], // To store the caisses fetched from the server\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchRevenue(); // Fetch revenue when the component is mounted\r\n    this.fetchCaisses(); // Fetch caisses when the component is mounted\r\n  },\r\n  methods: {\r\n    toggleCollapse() {\r\n      this.isCollapsed = !this.isCollapsed;\r\n    },\r\n    async fetchRevenue() {\r\n      try {\r\n        // Fetch revenue from your server-side endpoint\r\n        const response = await axios.get('http://localhost:5000/revnue');\r\n        // Map fetched data to match the table structure\r\n        this.table1.data = response.data.data.map(revenue => ({\r\n          ID: revenue.id,\r\n          Revenue: revenue.Revnue,\r\n          \"Caisse ID\": revenue.CaisseId\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error fetching revenue:', error);\r\n      }\r\n    },\r\n    async fetchCaisses() {\r\n      try {\r\n        // Fetch caisses from your server-side endpoint\r\n        const response = await axios.get('http://localhost:5000/caisse');\r\n        // Store fetched caisses\r\n        this.caisses = response.data.data;\r\n      } catch (error) {\r\n        console.error('Error fetching caisses:', error);\r\n      }\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        // Send POST request to add a new revenue\r\n        const response = await axios.post('http://localhost:5000/revnue', {\r\n          Revnue: this.formData.revenue,\r\n          CaisseId: this.formData.caisseId // Include the Caisse ID in the request\r\n        });\r\n        // Update the table data if the request is successful\r\n        if (response.status === 201) {\r\n          this.table1.data.push({\r\n            ID: response.data.id,\r\n            Revenue: response.data.Revnue,\r\n            \"Caisse ID\": response.data.CaisseId\r\n          });\r\n          await this.fetchRevenue();\r\n          // Clear the form after adding the revenue\r\n          this.formData.revenue = '';\r\n          this.formData.caisseId = null; // Clear the Caisse ID field as well\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding revenue:', error);\r\n      }\r\n    },\r\n    async deleteRevenue(revenue) {\r\n      const confirmation = confirm(\"Are you sure you want to delete this revenue?\");\r\n      if (confirmation) {\r\n        try {\r\n          // Send DELETE request to delete the revenue\r\n          await axios.delete(`http://localhost:5000/revnue/${revenue.ID}`);\r\n          // Refresh the table after deletion\r\n          this.fetchRevenue();\r\n        } catch (error) {\r\n          console.error('Error deleting revenue:', error);\r\n        }\r\n      }\r\n    },\r\n    openEditModal(revenue) {\r\n      this.editFormData.id = revenue.ID;\r\n      this.editFormData.revenue = revenue.Revenue;\r\n      this.editFormData.caisseId = revenue[\"Caisse ID\"];\r\n      this.$refs.editModal.show();\r\n    },\r\n    async submitEditForm() {\r\n      try {\r\n        // Send PUT request to update the revenue\r\n        await axios.put(`http://localhost:5000/revnue/${this.editFormData.id}`, {\r\n          Revnue: this.editFormData.revenue,\r\n          CaisseId: this.editFormData.caisseId // Include the updated Caisse ID in the request\r\n        });\r\n        // Hide the modal after editing\r\n        this.$refs.editModal.hide();\r\n        // Refresh the table after editing\r\n        this.fetchRevenue();\r\n      } catch (error) {\r\n        console.error('Error editing revenue:', error);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styling for the arrow */\r\n.arrow {\r\n  display: inline-block;\r\n  width: 0;\r\n  height: 0;\r\n  vertical-align: middle;\r\n  border: solid;\r\n  border-width: 0.2em 0.2em 0 0.2em;\r\n  border-color: #000000;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n/* Styling for the arrow when the form is collapsed */\r\n.rotated {\r\n  transform: rotate(-90deg);\r\n}\r\n.card .card-body {\r\n  padding: 15px 15px 20px 15px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}