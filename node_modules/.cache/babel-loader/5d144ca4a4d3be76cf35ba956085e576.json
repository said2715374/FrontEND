{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Magasin.vue.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Magasin.vue.vue","mtime":1713232123464},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\.babelrc","mtime":1713232126048},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/serveurr/vue_js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse,\n    BModal: BModal\n  },\n  data: function data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        address: '',\n        superviseur: ''\n      },\n      editFormData: {\n        address: '',\n        superviseur: ''\n      },\n      table1: {\n        title: \"Tableau des magasins\",\n        subTitle: \"magasins\",\n        columns: [\"Id\", \"Adresse\", \"Superviseur\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchMagasins(); // Fetch magasins when the component is mounted\n  },\n  methods: {\n    toggleCollapse: function toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    fetchMagasins: function () {\n      var _fetchMagasins = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:5000/magasinRouter');\n            case 3:\n              response = _context.sent;\n              // Map fetched data to match the table structure\n              this.table1.data = response.data.data.map(function (magasin) {\n                return {\n                  Id: magasin.id,\n                  Adresse: magasin.address || '',\n                  // Use empty string if address is not provided\n                  Superviseur: magasin.superviseur || '' // Use empty string if superviseur is not provided\n                };\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching magasins:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchMagasins() {\n        return _fetchMagasins.apply(this, arguments);\n      }\n      return fetchMagasins;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('http://localhost:5000/magasinRouter', {\n                address: this.formData.address,\n                superviseur: this.formData.superviseur\n              });\n            case 3:\n              response = _context2.sent;\n              // Update the table data if the request is successful\n              if (response.status === 201) {\n                this.table1.data.push({\n                  Id: response.data.id,\n                  Adresse: response.data.address,\n                  Superviseur: response.data.superviseur\n                });\n                // Clear the form after adding the magasin\n                this.formData.address = '';\n                this.formData.superviseur = '';\n                this.fetchMagasins();\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error adding magasin:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    deleteMagasin: function deleteMagasin(magasin) {\n      var _this = this;\n      var confirmation = confirm(\"Are you sure you want to delete this magasin?\");\n      if (confirmation) {\n        axios.delete(\"http://localhost:5000/magasinRouter/\".concat(magasin.Id)).then(function () {\n          _this.fetchMagasins(); // Refresh the table after deletion\n        }).catch(function (error) {\n          console.error('Error deleting magasin:', error);\n        });\n      }\n    },\n    openEditModal: function openEditModal(magasin) {\n      // Assign the magasin data to editFormData\n      this.editFormData = {\n        Id: magasin.Id,\n        address: magasin.Adresse,\n        superviseur: magasin.Superviseur\n      };\n      this.$refs.editModal.show();\n    },\n    submitEditForm: function submitEditForm() {\n      var _this2 = this;\n      try {\n        // Send PUT request to update the magasin\n        axios.put(\"http://localhost:5000/magasinRouter/\".concat(this.editFormData.Id), {\n          address: this.editFormData.address,\n          superviseur: this.editFormData.superviseur\n        }).then(function () {\n          // Find the index of the edited magasin in the table data\n          var index = _this2.table1.data.findIndex(function (item) {\n            return item.Id === _this2.editFormData.Id;\n          });\n          // If the index is found, update the magasin data\n          if (index !== -1) {\n            _this2.table1.data[index].Adresse = _this2.editFormData.address;\n            _this2.table1.data[index].Superviseur = _this2.editFormData.superviseur;\n          }\n          _this2.$refs.editModal.hide(); // Hide the edit modal\n        }).catch(function (error) {\n          console.error('Error editing magasin:', error);\n        });\n      } catch (error) {\n        console.error('Error editing magasin:', error);\n      }\n    }\n  }\n};",{"version":3,"names":["BCard","BCardHeader","BCardBody","BCollapse","BModal","axios","components","data","isCollapsed","formData","address","superviseur","editFormData","table1","title","subTitle","columns","mounted","fetchMagasins","methods","toggleCollapse","_fetchMagasins","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","map","magasin","Id","id","Adresse","Superviseur","t0","console","error","stop","apply","arguments","submitForm","_submitForm","_callee2","_callee2$","_context2","post","status","push","deleteMagasin","_this","confirmation","confirm","delete","concat","then","catch","openEditModal","$refs","editModal","show","submitEditForm","_this2","put","index","findIndex","item","hide"],"sources":["src/pages/Magasin.vue.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <!-- Collapsible form -->\n      <b-card>\n        <b-card-header id=\"formCollapseHeader\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\n              Ajouter un nouveau magasin\n              <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\n            </button>\n          </h5>\n        </b-card-header>\n\n        <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\n          <b-card-body>\n            <form @submit.prevent=\"submitForm\">\n              <div class=\"form-group\">\n                <input v-model=\"formData.address\" type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"Adresse\" required>\n                <input v-model=\"formData.superviseur\" type=\"text\" class=\"form-control\" id=\"superviseur\" placeholder=\"Superviseur\" required>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n            </form>\n          </b-card-body>\n        </b-collapse>\n      </b-card>\n\n      <!-- Bootstrap Modal for Edit -->\n      <b-modal ref=\"editModal\" title=\"Edit Magasin\" @ok=\"submitEditForm\">\n        <div>\n          <div class=\"form-group\">\n            <label for=\"editMagasinAddress\">Adresse:</label>\n            <input v-model=\"editFormData.address\" type=\"text\" class=\"form-control\" id=\"editMagasinAddress\" required>\n            <label for=\"editMagasinSuperviseur\">Superviseur:</label>\n            <input v-model=\"editFormData.superviseur\" type=\"text\" class=\"form-control\" id=\"editMagasinSuperviseur\" required>\n          </div>\n        </div>\n      </b-modal>\n\n      <!-- Your existing card -->\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\n                <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\n                <td>\n                  <button class=\"btn btn-danger\" @click=\"deleteMagasin(item)\">Supprimer</button>\n                  <button class=\"btn btn-warning\" @click=\"openEditModal(item)\">Modifier</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCollapse,\n    BModal,\n  },\n  data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        address: '',\n        superviseur: '',\n      },\n      editFormData: {\n        address: '',\n        superviseur: '',\n      },\n      table1: {\n        title: \"Tableau des magasins\",\n        subTitle: \"magasins\",\n        columns: [\"Id\", \"Adresse\", \"Superviseur\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted() {\n    this.fetchMagasins(); // Fetch magasins when the component is mounted\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    async fetchMagasins() {\n      try {\n        // Fetch magasins from your server-side endpoint\n        const response = await axios.get('http://localhost:5000/magasinRouter');\n        // Map fetched data to match the table structure\n        this.table1.data = response.data.data.map(magasin => ({\n          Id: magasin.id,\n          Adresse: magasin.address || '', // Use empty string if address is not provided\n          Superviseur: magasin.superviseur || '', // Use empty string if superviseur is not provided\n        }));\n      } catch (error) {\n        console.error('Error fetching magasins:', error);\n      }\n    },\n    async submitForm() {\n      try {\n        // Send POST request to add a new magasin\n        const response = await axios.post('http://localhost:5000/magasinRouter', {\n          address: this.formData.address,\n          superviseur: this.formData.superviseur\n        });\n        // Update the table data if the request is successful\n        if (response.status === 201) {\n          this.table1.data.push({\n            Id: response.data.id,\n            Adresse: response.data.address,\n            Superviseur: response.data.superviseur,\n          });\n          // Clear the form after adding the magasin\n          this.formData.address = '';\n          this.formData.superviseur = '';\n          this.fetchMagasins();\n        }\n      } catch (error) {\n        console.error('Error adding magasin:', error);\n      }\n    },\n    deleteMagasin(magasin) {\n      const confirmation = confirm(\"Are you sure you want to delete this magasin?\");\n      if (confirmation) {\n        axios.delete(`http://localhost:5000/magasinRouter/${magasin.Id}`)\n          .then(() => {\n            this.fetchMagasins(); // Refresh the table after deletion\n          })\n          .catch(error => {\n            console.error('Error deleting magasin:', error);\n          });\n      }\n    },\n    openEditModal(magasin) {\n      // Assign the magasin data to editFormData\n      this.editFormData = {\n        Id: magasin.Id,\n        address: magasin.Adresse,\n        superviseur: magasin.Superviseur\n      };\n      this.$refs.editModal.show();\n    },\n    submitEditForm() {\n      try {\n        // Send PUT request to update the magasin\n        axios.put(`http://localhost:5000/magasinRouter/${this.editFormData.Id}`, {\n          address: this.editFormData.address,\n          superviseur: this.editFormData.superviseur\n        })\n        .then(() => {\n          // Find the index of the edited magasin in the table data\n          const index = this.table1.data.findIndex(item => item.Id === this.editFormData.Id);\n          // If the index is found, update the magasin data\n          if (index !== -1) {\n            this.table1.data[index].Adresse = this.editFormData.address;\n            this.table1.data[index].Superviseur = this.editFormData.superviseur;\n          }\n          this.$refs.editModal.hide(); // Hide the edit modal\n        })\n        .catch(error => {\n          console.error('Error editing magasin:', error);\n        });\n      } catch (error) {\n        console.error('Error editing magasin:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styling for the arrow */\n.arrow {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  border: solid;\n  border-width: 0.2em 0.2em 0 0.2em;\n  border-color: #000000;\n  transition: transform 0.3s;\n}\n\n/* Styling for the arrow when the form is collapsed */\n.rotated {\n  transform: rotate(-90deg);\n}\n\n.card .card-body {\n  padding: 15px 15px 20px 15px;\n}\n</style>\n"],"mappings":";;;AAkEA,SAAAA,KAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,MAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAN,KAAA,EAAAA,KAAA;IACAC,WAAA,EAAAA,WAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,SAAA,EAAAA,SAAA;IACAC,MAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;QACAC,OAAA;QACAC,WAAA;MACA;MACAC,YAAA;QACAF,OAAA;QACAC,WAAA;MACA;MACAE,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,OAAA;QACAT,IAAA;MACA;IACA;EACA;EACAU,OAAA,WAAAA,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MACA,KAAAZ,WAAA,SAAAA,WAAA;IACA;IACAU,aAAA;MAAA,IAAAG,cAAA,GAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,kBAAA,CAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGA1B,KAAA,CAAA2B,GAAA;YAAA;cAAAN,QAAA,GAAAG,QAAA,CAAAI,IAAA;cACA;cACA,KAAApB,MAAA,CAAAN,IAAA,GAAAmB,QAAA,CAAAnB,IAAA,CAAAA,IAAA,CAAA2B,GAAA,WAAAC,OAAA;gBAAA;kBACAC,EAAA,EAAAD,OAAA,CAAAE,EAAA;kBACAC,OAAA,EAAAH,OAAA,CAAAzB,OAAA;kBAAA;kBACA6B,WAAA,EAAAJ,OAAA,CAAAxB,WAAA;gBACA;cAAA;cAAAkB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;cAEAY,OAAA,CAAAC,KAAA,6BAAAb,QAAA,CAAAW,EAAA;YAAA;YAAA;cAAA,OAAAX,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;MAAA,SAAAP,cAAA;QAAA,OAAAG,cAAA,CAAAuB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA3B,aAAA;IAAA;IAGA4B,UAAA;MAAA,IAAAC,WAAA,GAAAzB,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAwB,SAAA;QAAA,IAAAtB,QAAA;QAAA,OAAAH,kBAAA,CAAAI,IAAA,UAAAsB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAAmB,SAAA,CAAApB,IAAA;cAAAoB,SAAA,CAAAnB,IAAA;cAAA,OAGA1B,KAAA,CAAA8C,IAAA;gBACAzC,OAAA,OAAAD,QAAA,CAAAC,OAAA;gBACAC,WAAA,OAAAF,QAAA,CAAAE;cACA;YAAA;cAHAe,QAAA,GAAAwB,SAAA,CAAAjB,IAAA;cAIA;cACA,IAAAP,QAAA,CAAA0B,MAAA;gBACA,KAAAvC,MAAA,CAAAN,IAAA,CAAA8C,IAAA;kBACAjB,EAAA,EAAAV,QAAA,CAAAnB,IAAA,CAAA8B,EAAA;kBACAC,OAAA,EAAAZ,QAAA,CAAAnB,IAAA,CAAAG,OAAA;kBACA6B,WAAA,EAAAb,QAAA,CAAAnB,IAAA,CAAAI;gBACA;gBACA;gBACA,KAAAF,QAAA,CAAAC,OAAA;gBACA,KAAAD,QAAA,CAAAE,WAAA;gBACA,KAAAO,aAAA;cACA;cAAAgC,SAAA,CAAAnB,IAAA;cAAA;YAAA;cAAAmB,SAAA,CAAApB,IAAA;cAAAoB,SAAA,CAAAV,EAAA,GAAAU,SAAA;cAEAT,OAAA,CAAAC,KAAA,0BAAAQ,SAAA,CAAAV,EAAA;YAAA;YAAA;cAAA,OAAAU,SAAA,CAAAP,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA;MAAA,SAAAF,WAAA;QAAA,OAAAC,WAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAC,UAAA;IAAA;IAGAQ,aAAA,WAAAA,cAAAnB,OAAA;MAAA,IAAAoB,KAAA;MACA,IAAAC,YAAA,GAAAC,OAAA;MACA,IAAAD,YAAA;QACAnD,KAAA,CAAAqD,MAAA,wCAAAC,MAAA,CAAAxB,OAAA,CAAAC,EAAA,GACAwB,IAAA;UACAL,KAAA,CAAArC,aAAA;QACA,GACA2C,KAAA,WAAAnB,KAAA;UACAD,OAAA,CAAAC,KAAA,4BAAAA,KAAA;QACA;MACA;IACA;IACAoB,aAAA,WAAAA,cAAA3B,OAAA;MACA;MACA,KAAAvB,YAAA;QACAwB,EAAA,EAAAD,OAAA,CAAAC,EAAA;QACA1B,OAAA,EAAAyB,OAAA,CAAAG,OAAA;QACA3B,WAAA,EAAAwB,OAAA,CAAAI;MACA;MACA,KAAAwB,KAAA,CAAAC,SAAA,CAAAC,IAAA;IACA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA;QACA;QACA9D,KAAA,CAAA+D,GAAA,wCAAAT,MAAA,MAAA/C,YAAA,CAAAwB,EAAA;UACA1B,OAAA,OAAAE,YAAA,CAAAF,OAAA;UACAC,WAAA,OAAAC,YAAA,CAAAD;QACA,GACAiD,IAAA;UACA;UACA,IAAAS,KAAA,GAAAF,MAAA,CAAAtD,MAAA,CAAAN,IAAA,CAAA+D,SAAA,WAAAC,IAAA;YAAA,OAAAA,IAAA,CAAAnC,EAAA,KAAA+B,MAAA,CAAAvD,YAAA,CAAAwB,EAAA;UAAA;UACA;UACA,IAAAiC,KAAA;YACAF,MAAA,CAAAtD,MAAA,CAAAN,IAAA,CAAA8D,KAAA,EAAA/B,OAAA,GAAA6B,MAAA,CAAAvD,YAAA,CAAAF,OAAA;YACAyD,MAAA,CAAAtD,MAAA,CAAAN,IAAA,CAAA8D,KAAA,EAAA9B,WAAA,GAAA4B,MAAA,CAAAvD,YAAA,CAAAD,WAAA;UACA;UACAwD,MAAA,CAAAJ,KAAA,CAAAC,SAAA,CAAAQ,IAAA;QACA,GACAX,KAAA,WAAAnB,KAAA;UACAD,OAAA,CAAAC,KAAA,2BAAAA,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,2BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}