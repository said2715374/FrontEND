{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\mode_paiements.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\mode_paiements.vue","mtime":1713232123554},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\.babelrc","mtime":1713232126048},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/serveurr/vue_js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse,\n    BModal: BModal\n  },\n  data: function data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        process: ''\n      },\n      editFormData: {\n        process: ''\n      },\n      table1: {\n        title: \"Mode Paiement Table\",\n        subTitle: \"Mode Paiement\",\n        columns: [\"Id\", \"Process\"],\n        data: []\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchData();\n  },\n  methods: {\n    toggleCollapse: function toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    fetchData: function () {\n      var _fetchData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:5000/modePaiementRouter');\n            case 3:\n              response = _context.sent;\n              this.table1.data = response.data.data.map(function (item) {\n                return {\n                  Id: item.id,\n                  Process: item.process\n                };\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching data:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n      return fetchData;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('http://localhost:5000/modePaiementRouter', {\n                process: this.formData.process\n              });\n            case 3:\n              response = _context2.sent;\n              if (response.status === 201) {\n                this.fetchData();\n                this.formData.process = '';\n                this.isCollapsed = false;\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error adding process:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    deleteItem: function deleteItem(item) {\n      var _this = this;\n      var confirmation = confirm(\"Are you sure you want to delete this item?\");\n      if (confirmation) {\n        axios.delete(\"http://localhost:5000/modePaiementRouter/\".concat(item.Id)).then(function () {\n          _this.fetchData();\n        }).catch(function (error) {\n          console.error('Error deleting item:', error);\n        });\n      }\n    },\n    openEditModal: function openEditModal(item) {\n      this.editFormData = {\n        Id: item.Id,\n        process: item.Process\n      };\n      this.$refs.editModal.show();\n    },\n    submitEditForm: function submitEditForm() {\n      var _this2 = this;\n      try {\n        axios.put(\"http://localhost:5000/modePaiementRouter/\".concat(this.editFormData.Id), {\n          process: this.editFormData.process\n        }).then(function () {\n          var index = _this2.table1.data.findIndex(function (item) {\n            return item.Id === _this2.editFormData.Id;\n          });\n          if (index !== -1) {\n            _this2.table1.data[index].Process = _this2.editFormData.process;\n          }\n          _this2.$refs.editModal.hide();\n        }).catch(function (error) {\n          console.error('Error editing process:', error);\n        });\n      } catch (error) {\n        console.error('Error editing process:', error);\n      }\n    }\n  }\n};",{"version":3,"names":["BCard","BCardHeader","BCardBody","BCollapse","BModal","axios","components","data","isCollapsed","formData","process","editFormData","table1","title","subTitle","columns","mounted","fetchData","methods","toggleCollapse","_fetchData","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","map","item","Id","id","Process","t0","console","error","stop","apply","arguments","submitForm","_submitForm","_callee2","_callee2$","_context2","post","status","deleteItem","_this","confirmation","confirm","delete","concat","then","catch","openEditModal","$refs","editModal","show","submitEditForm","_this2","put","index","findIndex","hide"],"sources":["src/pages/mode_paiements.vue"],"sourcesContent":["<template>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <!-- Collapsible form -->\r\n        <b-card>\r\n          <b-card-header id=\"formCollapseHeader\">\r\n            <h5 class=\"mb-0\">\r\n              <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\r\n                Table des modes de paiement\r\n                <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\r\n              </button>\r\n            </h5>\r\n          </b-card-header>\r\n  \r\n          <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\r\n            <b-card-body>\r\n              <form @submit.prevent=\"submitForm\">\r\n                <div class=\"form-group\">\r\n                  <input v-model=\"formData.process\" type=\"text\" class=\"form-control\" id=\"process\" placeholder=\"Process Name\" required>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Ajouter Process</button>\r\n              </form>\r\n            </b-card-body>\r\n          </b-collapse>\r\n        </b-card>\r\n  \r\n        <!-- Bootstrap Modal for Edit -->\r\n        <b-modal ref=\"editModal\" title=\"Edit Process\" @ok=\"submitEditForm\">\r\n          <div>\r\n            <div class=\"form-group\">\r\n              <label for=\"editProcessName\">Nom de Process:</label>\r\n              <input v-model=\"editFormData.process\" type=\"text\" class=\"form-control\" id=\"editProcessName\" required>\r\n            </div>\r\n          </div>\r\n        </b-modal>\r\n  \r\n        <!-- Your existing card -->\r\n        <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\r\n          <div slot=\"raw-content\" class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\r\n                  <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\r\n                  <td>\r\n                    <button class=\"btn btn-danger\" @click=\"deleteItem(item)\">Supprimer</button>\r\n                    <button class=\"btn btn-warning\" @click=\"openEditModal(item)\">Modifier</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    components: {\r\n      BCard,\r\n      BCardHeader,\r\n      BCardBody,\r\n      BCollapse,\r\n      BModal,\r\n    },\r\n    data() {\r\n      return {\r\n        isCollapsed: false,\r\n        formData: {\r\n          process: ''\r\n        },\r\n        editFormData: {\r\n          process: ''\r\n        },\r\n        table1: {\r\n          title: \"Mode Paiement Table\",\r\n          subTitle: \"Mode Paiement\",\r\n          columns: [\"Id\", \"Process\"],\r\n          data: []\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      toggleCollapse() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n      },\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/modePaiementRouter');\r\n          this.table1.data = response.data.data.map(item => ({\r\n            Id: item.id,\r\n            Process: item.process,\r\n           \r\n          }));\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      },\r\n      async submitForm() {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/modePaiementRouter', {\r\n            process: this.formData.process\r\n          });\r\n          if (response.status === 201) {\r\n            this.fetchData();\r\n            this.formData.process = '';\r\n            this.isCollapsed = false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding process:', error);\r\n        }\r\n      },\r\n      deleteItem(item) {\r\n        const confirmation = confirm(\"Are you sure you want to delete this item?\");\r\n        if (confirmation) {\r\n          axios.delete(`http://localhost:5000/modePaiementRouter/${item.Id}`)\r\n            .then(() => {\r\n              this.fetchData();\r\n            })\r\n            .catch(error => {\r\n              console.error('Error deleting item:', error);\r\n            });\r\n        }\r\n      },\r\n      openEditModal(item) {\r\n        this.editFormData = {\r\n          Id: item.Id,\r\n          process: item.Process\r\n        };\r\n        this.$refs.editModal.show();\r\n      },\r\n      submitEditForm() {\r\n        try {\r\n          axios.put(`http://localhost:5000/modePaiementRouter/${this.editFormData.Id}`, {\r\n            process: this.editFormData.process\r\n          })\r\n          .then(() => {\r\n            const index = this.table1.data.findIndex(item => item.Id === this.editFormData.Id);\r\n            if (index !== -1) {\r\n              this.table1.data[index].Process = this.editFormData.process;\r\n            }\r\n            this.$refs.editModal.hide();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error editing process:', error);\r\n          });\r\n        } catch (error) {\r\n          console.error('Error editing process:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .arrow {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    vertical-align: middle;\r\n    border: solid;\r\n    border-width: 0.2em 0.2em 0 0.2em;\r\n    border-color: #000000;\r\n    transition: transform 0.3s;\r\n  }\r\n  \r\n  .rotated {\r\n    transform: rotate(-90deg);\r\n  }\r\n  .card .card-body {\r\n      padding: 15px 15px 20px 15px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]}]}