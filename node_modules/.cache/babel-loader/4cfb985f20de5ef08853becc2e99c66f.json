{"remainingRequest":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Roles.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\src\\pages\\Roles.vue","mtime":1713232124120},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\.babelrc","mtime":1713232126048},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\babel-loader\\lib\\index.js","mtime":1713232210282},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713232209249},{"path":"C:\\Users\\user\\Desktop\\serveurr\\vue_js\\node_modules\\vue-loader\\lib\\index.js","mtime":1713232211778}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/serveurr/vue_js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse,\n    BModal: BModal\n  },\n  data: function data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        role: ''\n      },\n      editFormData: {\n        role: ''\n      },\n      table1: {\n        title: \"Tableau des rôles\",\n        subTitle: \"rôles\",\n        columns: [\"Id\", \"Role\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchRoles(); // Fetch roles when the component is mounted\n  },\n  methods: {\n    toggleCollapse: function toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    fetchRoles: function () {\n      var _fetchRoles = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:5000/role');\n            case 3:\n              response = _context.sent;\n              // Map fetched data to match the table structure\n              this.table1.data = response.data.data.map(function (role) {\n                return {\n                  Id: role.id,\n                  Role: role.role\n                };\n              });\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching roles:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchRoles() {\n        return _fetchRoles.apply(this, arguments);\n      }\n      return fetchRoles;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('http://localhost:5000/role', {\n                role: this.formData.role\n              });\n            case 3:\n              response = _context2.sent;\n              // Update the table data if the request is successful\n              if (response.status === 201) {\n                this.table1.data.push({\n                  Id: response.data.id,\n                  Role: response.data.role\n                });\n                // Clear the form after adding the role\n                this.formData.role = '';\n                this.fetchRoles();\n              }\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error adding role:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n      return submitForm;\n    }(),\n    deleteRole: function deleteRole(role) {\n      var _this = this;\n      var confirmation = confirm(\"Are you sure you want to delete this role?\");\n      if (confirmation) {\n        axios.delete(\"http://localhost:5000/role/\".concat(role.Id)).then(function () {\n          _this.fetchRoles(); // Refresh the table after deletion\n        }).catch(function (error) {\n          console.error('Error deleting role:', error);\n        });\n      }\n    },\n    openEditModal: function openEditModal(role) {\n      // Assign the role data and Id to editFormData\n      this.editFormData = {\n        Id: role.Id,\n        role: role.Role\n      };\n      this.$refs.editModal.show();\n    },\n    submitEditForm: function submitEditForm() {\n      var _this2 = this;\n      try {\n        // Send PUT request to update the role\n        axios.put(\"http://localhost:5000/role/\".concat(this.editFormData.Id), {\n          role: this.editFormData.role\n        }).then(function () {\n          // Find the index of the edited role in the table data\n          var index = _this2.table1.data.findIndex(function (item) {\n            return item.Id === _this2.editFormData.Id;\n          });\n          // If the index is found, update the role data\n          if (index !== -1) {\n            _this2.table1.data[index].Role = _this2.editFormData.role;\n          }\n          _this2.$refs.editModal.hide(); // Hide the edit modal\n        }).catch(function (error) {\n          console.error('Error editing role:', error);\n        });\n      } catch (error) {\n        console.error('Error editing role:', error);\n      }\n    }\n  }\n};",{"version":3,"names":["BCard","BCardHeader","BCardBody","BCollapse","BModal","axios","components","data","isCollapsed","formData","role","editFormData","table1","title","subTitle","columns","mounted","fetchRoles","methods","toggleCollapse","_fetchRoles","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","map","Id","id","Role","t0","console","error","stop","apply","arguments","submitForm","_submitForm","_callee2","_callee2$","_context2","post","status","push","deleteRole","_this","confirmation","confirm","delete","concat","then","catch","openEditModal","$refs","editModal","show","submitEditForm","_this2","put","index","findIndex","item","hide"],"sources":["src/pages/Roles.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <!-- Collapsible form -->\n      <b-card>\n        <b-card-header id=\"formCollapseHeader\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" type=\"button\" @click=\"toggleCollapse\">\n              Ajouter un nouveau rôle\n              <span class=\"arrow\" :class=\"{ 'rotated': isCollapsed }\"></span>\n            </button>\n          </h5>\n        </b-card-header>\n\n        <b-collapse id=\"formCollapse\" v-model=\"isCollapsed\">\n          <b-card-body>\n            <form @submit.prevent=\"submitForm\">\n              <div class=\"form-group\">\n                <input v-model=\"formData.role\" type=\"text\" class=\"form-control\" id=\"role\" placeholder=\"Role Nom\" required>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n            </form>\n          </b-card-body>\n        </b-collapse>\n      </b-card>\n\n      <!-- Bootstrap Modal for Edit -->\n      <b-modal ref=\"editModal\" title=\"Edit Role\" @ok=\"submitEditForm\">\n        <div>\n          <div class=\"form-group\">\n            <label for=\"editRoleName\">Role Name:</label>\n            <input v-model=\"editFormData.role\" type=\"text\" class=\"form-control\" id=\"editRoleName\" required>\n          </div>\n        </div>\n      </b-modal>\n\n      <!-- Your existing card -->\n      <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n        <div slot=\"raw-content\" class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th v-for=\"column in table1.columns\" :key=\"column\">{{ column }}</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, index) in table1.data\" :key=\"index\">\n                <td v-for=\"(value, key) in item\" :key=\"key\">{{ value }}</td>\n                <td>\n                  <button class=\"btn btn-danger\" @click=\"deleteRole(item)\">Supprimer</button>\n                  <button class=\"btn btn-warning\" @click=\"openEditModal(item)\">Modifier</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BCard, BCardHeader, BCardBody, BCollapse, BModal } from 'bootstrap-vue';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCollapse,\n    BModal,\n  },\n  data() {\n    return {\n      isCollapsed: false,\n      formData: {\n        role: ''\n      },\n      editFormData: {\n        role: ''\n      },\n      table1: {\n        title: \"Tableau des rôles\",\n        subTitle: \"rôles\",\n        columns: [\"Id\", \"Role\"],\n        data: [] // Initialize as empty array\n      }\n    };\n  },\n  mounted() {\n    this.fetchRoles(); // Fetch roles when the component is mounted\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n    },\n    async fetchRoles() {\n      try {\n        // Fetch roles from your server-side endpoint\n        const response = await axios.get('http://localhost:5000/role');\n        // Map fetched data to match the table structure\n        this.table1.data = response.data.data.map(role => ({\n          Id: role.id,\n          Role: role.role\n        }));\n      } catch (error) {\n        console.error('Error fetching roles:', error);\n      }\n    },\n    async submitForm() {\n      try {\n        // Send POST request to add a new role\n        const response = await axios.post('http://localhost:5000/role', {\n          role: this.formData.role\n        });\n        // Update the table data if the request is successful\n        if (response.status === 201) {\n          this.table1.data.push({\n            Id: response.data.id,\n            Role: response.data.role\n          });\n          // Clear the form after adding the role\n          this.formData.role = '';\n          this.fetchRoles()\n        }\n      } catch (error) {\n        console.error('Error adding role:', error);\n      }\n    },\n    deleteRole(role) {\n      const confirmation = confirm(\"Are you sure you want to delete this role?\");\n      if (confirmation) {\n        axios.delete(`http://localhost:5000/role/${role.Id}`)\n          .then(() => {\n            this.fetchRoles(); // Refresh the table after deletion\n          })\n          .catch(error => {\n            console.error('Error deleting role:', error);\n          });\n      }\n    },\n    openEditModal(role) {\n  // Assign the role data and Id to editFormData\n  this.editFormData = {\n    Id: role.Id,\n    role: role.Role\n  };\n  this.$refs.editModal.show();\n},\n\n    submitEditForm() {\n  try {\n    // Send PUT request to update the role\n    axios.put(`http://localhost:5000/role/${this.editFormData.Id}`, {\n      role: this.editFormData.role\n    })\n    .then(() => {\n      // Find the index of the edited role in the table data\n      const index = this.table1.data.findIndex(item => item.Id === this.editFormData.Id);\n      // If the index is found, update the role data\n      if (index !== -1) {\n        this.table1.data[index].Role = this.editFormData.role;\n      }\n      this.$refs.editModal.hide(); // Hide the edit modal\n    })\n    .catch(error => {\n      console.error('Error editing role:', error);\n    });\n  } catch (error) {\n    console.error('Error editing role:', error);\n  }\n}\n\n  }\n};\n</script>\n\n<style scoped>\n/* Styling for the arrow */\n.arrow {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  border: solid;\n  border-width: 0.2em 0.2em 0 0.2em;\n  border-color: #000000;\n  transition: transform 0.3s;\n}\n\n/* Styling for the arrow when the form is collapsed */\n.rotated {\n  transform: rotate(-90deg);\n}\n.card .card-body {\n    padding: 15px 15px 20px 15px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}